/*
 * ================================================================
 * 3-POLE SWITCH TESTER WITH DUAL DISPLAY SYSTEM
 * ================================================================
 *
 * Deskripsi:
 * Program advanced untuk menguji switch 3 pole dengan sistem dual display:
 * - LCD I2C 16x2 untuk status dan pesan detail testing
 * - TM1637 7-segment untuk counter jumlah switch yang PASS
 *
 * Sistem menggabungkan sequential testing dengan production counting,
 * ideal untuk quality control di production line dengan monitoring
 * throughput dan success rate.
 *
 * Fitur Utama:
 * 1. Sequential testing: Stage 1 (Pin2→Pin3) → Stage 2 (Pin2→Pin4)
 * 2. Error detection: Wrong sequence = ERROR state
 * 3. LCD display: Real-time status dan instructions
 * 4. TM1637 counter: Jumlah switch yang LULUS test
 * 5. Production monitoring: Count successful tests
 * 6. Audio feedback: Buzzer confirmation untuk PASS
 * 7. Smart update: LCD hanya update saat ada perubahan (anti-flicker)
 *
 * Hardware yang Dibutuhkan:
 * - Arduino Uno/Mega (recommended Mega untuk I2C stability)
 * - LCD 16x2 dengan I2C backpack (alamat 0x27)
 * - TM1637 4-digit 7-segment display module
 * - Buzzer aktif 5V
 * - Switch 3 pole yang akan ditest
 * - Push header/connector untuk testing
 * - Kabel jumper dan breadboard
 *
 * Pin Configuration:
 * - Pin 2: Output +5V (supply voltage untuk testing)
 * - Pin 3: Input Stage 1 test (Pin2 → Pin3 connection)
 * - Pin 4: Input Stage 2 test (Pin2 → Pin4 connection)
 * - Pin 5: Output buzzer konfirmasi
 * - Pin 6: CLK untuk TM1637 display
 * - Pin 7: DIO untuk TM1637 display
 * - SDA/SCL: I2C untuk LCD (Pin 20/21 di Mega, A4/A5 di Uno)
 *
 * Display System:
 * - LCD: Status messages, instructions, error notifications
 * - TM1637: Production counter (jumlah switch PASS)
 * - Serial: Detailed logging untuk debugging
 * - Buzzer: Audio confirmation untuk successful tests
 *
 * Production Features:
 * - Pass counter dengan persistent display
 * - Smart LCD update (anti-flicker dengan interval control)
 * - Error state detection dan recovery
 * - Throughput monitoring capability
 *
 * Aplikasi:
 * - Production line quality control
 * - Switch manufacturing testing station
 * - Batch testing dengan production counting
 * - Educational tool untuk sequential logic
 *
 * Author: Sembre & AGUS F
 * Date: 2025
 * Version: 2.0 (Enhanced dengan dual display)
 * Target: Arduino Mega 2560 preferred
 * ================================================================
 */

// ================================================================
// KONFIGURASI HARDWARE DAN PIN
// ================================================================

// Pin testing untuk switch 3 pole
const int pin2 = 2;   // Output +5V supply untuk testing
const int pin3 = 3;   // Input test Stage 1 (Pin2 → Pin3)
const int pin4 = 4;   // Input test Stage 2 (Pin2 → Pin4)
const int buzzer = 5; // Output buzzer konfirmasi PASS

// Pin untuk TM1637 7-segment display (production counter)
const int clk = 6; // Clock pin TM1637
const int dio = 7; // Data I/O pin TM1637

// ================================================================
// VARIABEL STATE TRACKING DAN PRODUCTION MONITORING
// ================================================================

/*
 * State variables untuk sequential testing:
 * - tahap1: Flag Stage 1 complete (Pin2→Pin3)
 * - tahap2: Flag Stage 2 complete (Pin2→Pin4)
 * - errorState: Flag jika wrong sequence detected
 *
 * Production monitoring variables:
 * - buzzerCount: Total switch yang PASS test
 * - buzzerTriggered: Prevent double counting per test cycle
 *
 * Display optimization variables:
 * - lastMessage: Cache untuk prevent LCD flicker
 * - lastUpdate: Timestamp untuk update interval control
 */
 // ================================================================
// DISPLAY HARDWARE INITIALIZATION
// ================================================================

/*
 * Dual Display System:
 *
 * LCD I2C 16x2:
 * - Address: 0x27 (default I2C backpack address)
 * - Function: Status messages, instructions, error display
 * - Update: Smart update dengan interval control
 *
 * TM1637 7-segment:
 * - Function: Production counter display
 * - Brightness: Level 7 (maximum)
 * - Update: Real-time saat ada increment counter
 */
 
// ================================================================
// UTILITY FUNCTIONS - Display management dan optimization
// ================================================================

/*
 * updateLCD() - Smart LCD update dengan anti-flicker
 *
 * Fungsi ini mengoptimalkan update LCD dengan:
 * 1. Message comparison: Hanya update jika message berubah
 * 2. Time interval control: Minimum interval antar update
 * 3. Automatic cursor positioning: Line 1 dan Line 2
 * 4. Clear screen: Prevent character artifacts
 *
 * Parameter:
 * - message: String untuk baris pertama LCD (max 16 char)
 * - subMessage: String untuk baris kedua LCD (max 16 char)
 *
 * Benefits:
 * - Mengurangi LCD flicker
 * - Optimasi performa dengan reduced I2C traffic
 * - Consistent display formatting
 * - Power saving dengan reduced update frequency
 */
 /*
 * updateDisplay() - Update TM1637 production counter
 *
 * Fungsi ini mengupdate 7-segment display dengan:
 * 1. Menampilkan buzzerCount sebagai decimal number
 * 2. No leading zeros untuk readability
 * 3. Range: 0-9999 (4 digit display)
 * 4. Instant update tanpa delay
 *
 * Features:
 * - Real-time counter display
 * - No leading zeros (1 bukan 0001)
 * - Overflow handling (>9999 wrap to 0)
 * - Brightness controlled di setup()
 */



 
// ================================================================
// UTILITY FUNCTIONS (Opsional - untuk pengembangan lebih lanjut)
// ================================================================

/*
 * resetProductionCounter() - Reset counter produksi ke 0
 * Untuk maintenance atau shift baru
 */
/*
void resetProductionCounter() {
  buzzerCount = 0;
  updateDisplay();
  Serial.println("Production counter reset to 0");
  updateLCD("Counter Reset", "Ready for Test");
  delay(2000);
  updateLCD("Masukan Switch", "Ke Posh HEADER");
}
*/

/*
 * getProductionStats() - Return statistik produksi
 * Return: String dengan informasi lengkap
 */
/*
String getProductionStats() {
  unsigned long uptime = millis() / 1000; // Uptime in seconds
  float rate = (uptime > 0) ? (buzzerCount * 3600.0 / uptime) : 0; // switches per hour

  String stats = "Production Statistics:\n";
  stats += "Total Switches Passed: " + String(buzzerCount) + "\n";
  stats += "System Uptime: " + String(uptime) + " seconds\n";
  stats += "Production Rate: " + String(rate, 2) + " switches/hour\n";
  stats += "Current Status: " + String(tahap1 ? "T1✓" : "T1✗") +
           " " + String(tahap2 ? "T2✓" : "T2✗") +
           " " + String(errorState ? "ERR!" : "OK");

  return stats;
}
*/

/*
 * displayProductionSummary() - Tampilkan ringkasan produksi
 * Untuk shift report atau daily summary
 */
/*
void displayProductionSummary() {
  Serial.println("=== PRODUCTION SUMMARY ===");
  Serial.println(getProductionStats());
  Serial.println("===========================");

  // Display summary di LCD
  updateLCD("Total Passed:", String(buzzerCount));
  delay(3000);

  unsigned long uptime = millis() / 1000;
  float rate = (uptime > 0) ? (buzzerCount * 3600.0 / uptime) : 0;
  updateLCD("Rate: " + String(rate, 1), "switches/hour");
  delay(3000);

  updateLCD("Masukan Switch", "Ke Posh HEADER");
}
*/

/*
 * runSystemDiagnostic() - Diagnostic lengkap sistem dual display
 */
/*
void runSystemDiagnostic() {
  Serial.println("=== DUAL DISPLAY SYSTEM DIAGNOSTIC ===");

  // Test LCD
  Serial.println("Testing LCD I2C...");
  updateLCD("LCD Test Line 1", "LCD Test Line 2");
  delay(2000);

  // Test TM1637
  Serial.println("Testing TM1637 7-segment...");
  for(int i = 0; i <= 9; i++) {
    display.showNumberDec(i, false);
    delay(300);
  }
  display.showNumberDec(buzzerCount, false);

  // Test buzzer
  Serial.println("Testing buzzer...");
  for(int i = 0; i < 3; i++) {
    digitalWrite(buzzer, HIGH);
    delay(200);
    digitalWrite(buzzer, LOW);
    delay(200);
  }

  // Test pin inputs
  Serial.println("Testing input pins...");
  Serial.print("Pin 3 state: ");
  Serial.println(digitalRead(pin3) ? "HIGH" : "LOW");
  Serial.print("Pin 4 state: ");
  Serial.println(digitalRead(pin4) ? "HIGH" : "LOW");

  Serial.println("=== DIAGNOSTIC COMPLETE ===");
  updateLCD("Diagnostic OK", "System Ready");
  delay(2000);
  updateLCD("Masukan Switch", "Ke Posh HEADER");
}
*/

/*
 * saveProductionData() - Save data ke EEPROM (untuk persistent storage)
 * Memerlukan library EEPROM
 */
/*
#include <EEPROM.h>

void saveProductionData() {
  // Save buzzerCount ke EEPROM address 0-3 (4 bytes untuk int)
  EEPROM.put(0, buzzerCount);
  Serial.print("Production count saved to EEPROM: ");
  Serial.println(buzzerCount);
}

void loadProductionData() {
  // Load buzzerCount dari EEPROM
  EEPROM.get(0, buzzerCount);
  if (buzzerCount < 0 || buzzerCount > 9999) {
    buzzerCount = 0; // Reset jika data corrupt
  }
  updateDisplay();
  Serial.print("Production count loaded from EEPROM: ");
  Serial.println(buzzerCount);
}
*/

// ================================================================
// DOKUMENTASI TEKNIS DAN TROUBLESHOOTING
// ================================================================

/*
 * WIRING DIAGRAM DUAL DISPLAY SWITCH TESTER:
 * ==========================================
 *
 * Arduino Mega -> LCD I2C:
 * 5V     -> VCC
 * GND    -> GND
 * Pin 20 -> SDA (I2C Data)
 * Pin 21 -> SCL (I2C Clock)
 *
 * Arduino Mega -> TM1637 7-Segment:
 * 5V     -> VCC
 * GND    -> GND
 * Pin 6  -> CLK (Clock)
 * Pin 7  -> DIO (Data I/O)
 *
 * Arduino Mega -> Testing Circuit:
 * Pin 2  -> +5V Supply (untuk switch testing)
 * Pin 3  -> Stage 1 Input (COM → NC detection)
 * Pin 4  -> Stage 2 Input (COM → NO detection)
 * Pin 5  -> Buzzer + (Active buzzer 5V)
 * GND    -> Buzzer -
 *
 * 3-Pole Switch Under Test:
 *    Switch Terminal    Arduino Connection
 *    ===============    ===================
 *    COM (Terminal 1) -> Pin 2 (+5V supply)
 *    NC  (Terminal 2) -> Pin 3 (Stage 1 test)
 *    NO  (Terminal 3) -> Pin 4 (Stage 2 test)
 *
 *
 * DUAL DISPLAY SYSTEM FUNCTIONS:
 * ===============================
 *
 * LCD I2C 16x2 Display:
 * - Line 1: Primary status message (16 characters max)
 * - Line 2: Secondary info/instructions (16 characters max)
 * - Function: Real-time test status, instructions, error messages
 * - Update: Smart update dengan anti-flicker (500ms interval)
 * - Backlight: Always ON untuk production environment
 *
 * TM1637 7-Segment Display:
 * - Function: Production counter (0-9999)
 * - Display: No leading zeros untuk clean appearance
 * - Update: Immediate saat ada successful test
 * - Brightness: Maximum (level 7) untuk visibility
 * - Overflow: Auto reset ke 0 jika > 9999
 *
 * Display Coordination:
 * - LCD: Status dan instructions (dynamic content)
 * - TM1637: Production metrics (cumulative data)
 * - Serial: Detailed logging (debugging & monitoring)
 * - Buzzer: Audio confirmation (success feedback)
 *
 *
 * PRODUCTION WORKFLOW:
 * ===================
 *
 * 1. System Startup:
 *    LCD: "Sistem Mulai.... / by AGUS F" (5 seconds)
 *    TM1637: Shows current counter value
 *    Serial: Initialization sequence logged
 *
 * 2. Ready State:
 *    LCD: "Masukan Switch / Ke Posh HEADER"
 *    TM1637: Shows current production count
 *    System: Monitoring for switch insertion
 *
 * 3. Stage 1 Detection:
 *    LCD: "Cek pin 2&3 = OK / Tekan Switch"
 *    Action: Pin2→Pin3 connection confirmed
 *    Next: Wait for Stage 2
 *
 * 4. Stage 2 Detection:
 *    LCD: "Cek pin 1&2 = OK / Buzzer Siap!"
 *    Action: Pin2→Pin4 connection confirmed
 *    Next: Final evaluation
 *
 * 5. Success State:
 *    LCD: "Product OK / Switch Berfungsi"
 *    TM1637: Counter incremented (+1)
 *    Buzzer: Activated (confirmation beep)
 *    Serial: Production statistics logged
 *
 * 6. Error State:
 *    LCD: "ERROR / Pin 1&3 terbalik"
 *    TM1637: Counter unchanged (no increment)
 *    Buzzer: Error pattern (3 short beeps)
 *    Serial: Error details logged
 *
 * 7. Reset Cycle:
 *    Trigger: Both pins LOW (switch removed)
 *    Action: Return to Ready State
 *    Display: Back to "Masukan Switch"
 *
 *
 * PRODUCTION METRICS & MONITORING:
 * ================================
 *
 * Key Performance Indicators:
 * - Total Switches Passed: TM1637 display value
 * - Success Rate: 100% (errors don't increment counter)
 * - Throughput: Switches per hour (calculated)
 * - System Uptime: Continuous operation time
 * - Error Rate: Tracked via Serial logging
 *
 * Quality Control Benefits:
 * - Real-time pass count visible on TM1637
 * - No manual counting required
 * - Error detection prevents bad units
 * - Audit trail via Serial logging
 * - Shift performance tracking
 *
 * Production Line Integration:
 * - Counter persists during operation
 * - No reset unless manually triggered
 * - Can be read by external systems
 * - Suitable for automated production
 * - Operator-friendly interface
 *
 *
 * TROUBLESHOOTING GUIDE:
 * ======================
 *
 * Problem: LCD tidak menyala atau blank
 * Solution:
 * - Cek koneksi power LCD (VCC ke 5V, GND ke GND)
 * - Cek koneksi I2C (SDA pin 20, SCL pin 21 untuk Mega)
 * - Scan I2C address dengan I2C scanner code
 * - Adjust contrast potentiometer pada I2C backpack
 * - Test dengan LCD standalone program
 * - Verify I2C backpack solder joints
 *
 * Problem: TM1637 tidak menampilkan angka
 * Solution:
 * - Cek koneksi power TM1637 (VCC, GND)
 * - Verify CLK pin 6 dan DIO pin 7 connections
 * - Test dengan TM1637 simple example code
 * - Check solder joints pada TM1637 module
 * - Verify library TM1637Display terinstall
 * - Try different brightness level (0-7)
 *
 * Problem: Counter tidak bertambah saat switch PASS
 * Solution:
 * - Cek logic buzzerTriggered flag (mungkin stuck TRUE)
 * - Verify tahap1 && tahap2 conditions terpenuhi
 * - Check updateDisplay() function dipanggil
 * - Monitor Serial output untuk debug info
 * - Restart system untuk reset semua flags
 *
 * Problem: LCD update terlalu cepat (flicker)
 * Solution:
 * - lcdUpdateInterval sudah 500ms (optimal)
 * - Cek lastMessage comparison logic
 * - Verify updateLCD() hanya dipanggil saat perlu
 * - Monitor Serial untuk excessive update calls
 * - Increase interval jika masih flicker
 *
 * Problem: Switch error detection tidak bekerja
 * Solution:
 * - Verify Pin 4 HIGH sebelum Pin 3 HIGH logic
 * - Check pin connections dan wiring
 * - Test dengan oscilloscope untuk timing
 * - Verify error state reset logic
 * - Check switch mechanism dan pinout
 *
 * Problem: Buzzer tidak berbunyi saat success
 * Solution:
 * - Cek koneksi buzzer (Pin 5 ke +, GND ke -)
 * - Verify active buzzer 5V (bukan passive)
 * - Test dengan digitalWrite HIGH manual
 * - Check current consumption buzzer (<40mA)
 * - Verify logic tahap1 && tahap2 terpenuhi
 *
 * Problem: Serial output tidak muncul
 * Solution:
 * - Verify baud rate 9600 di Serial Monitor
 * - Cek koneksi USB ke Arduino
 * - Try different USB port atau cable
 * - Restart Arduino IDE
 * - Verify driver Arduino terinstall
 *
 * Problem: System hang atau tidak responsive
 * Solution:
 * - Check untuk infinite loops atau blocking code
 * - Verify delay() values tidak terlalu besar
 * - Monitor memory usage (strings bisa consume RAM)
 * - Restart Arduino (power cycle)
 * - Upload fresh code
 *
 *
 * MAINTENANCE DAN KALIBRASI:
 * ==========================
 *
 * Daily Maintenance:
 * - Visual check semua display berfungsi
 * - Test dengan reference switch yang known good
 * - Verify counter increment properly
 * - Check all connections secure
 * - Clean test header contacts
 * - Record daily production count
 *
 * Weekly Maintenance:
 * - Calibration test dengan precision switches
 * - Verify timing accuracy (stage detection)
 * - Check I2C communication stability
 * - Clean LCD screen dan TM1637 display
 * - Backup production data (jika ada storage)
 * - Update maintenance log
 *
 * Monthly Maintenance:
 * - Deep system diagnostic
 * - Replace test header jika wear
 * - Check all wire connections
 * - Firmware update jika available
 * - Statistical analysis production data
 * - Preventive component replacement
 *
 * Quarterly Maintenance:
 * - Complete system recalibration
 * - Replace aging components (buzzer, displays)
 * - Environmental check (temperature, humidity)
 * - Documentation update
 * - Training refresh untuk operators
 * - System performance evaluation
 *
 *
 * PENGEMBANGAN LANJUTAN:
 * ======================
 *
 * 1. Data Logging Enhancement:
 *    - SD card logging dengan timestamp
 *    - Error statistics tracking
 *    - Shift-based reporting
 *    - CSV export untuk Excel analysis
 *    - Real-time data streaming
 *
 * 2. Production Integration:
 *    - Ethernet/WiFi connectivity
 *    - Database integration (MySQL/PostgreSQL)
 *    - MES (Manufacturing Execution System) integration
 *    - Barcode/QR code tracking
 *    - SCADA system communication
 *
 * 3. Advanced UI Features:
 *    - Larger LCD (20x4) untuk more information
 *    - Touchscreen interface
 *    - Menu system untuk configuration
 *    - Multi-language support
 *    - Operator authentication
 *
 * 4. Quality Control Enhancement:
 *    - Statistical Process Control (SPC)
 *    - Trend analysis charts
 *    - Alarm system untuk quality issues
 *    - Automatic calibration scheduling
 *    - Predictive maintenance alerts
 *
 * 5. Automation Features:
 *    - Conveyor belt integration
 *    - Automatic part handling
 *    - Robot integration
 *    - Vision system untuk part identification
 *    - Automatic sorting (pass/fail)
 *
 * 6. Mobile Integration:
 *    - Smartphone app untuk monitoring
 *    - Push notifications untuk alerts
 *    - Remote configuration
 *    - Cloud-based analytics
 *    - Real-time dashboard
 *
 *
 * SPESIFIKASI TEKNIS SISTEM:
 * ==========================
 *
 * Hardware Specifications:
 * - MCU: Arduino Mega 2560 (recommended)
 * - RAM: 8KB (sufficient untuk current application)
 * - Flash: 256KB (plenty untuk program expansion)
 * - I/O: 54 digital pins (only 6 used)
 * - Power: 5V DC, 500mA typical, 1A max
 *
 * Display Specifications:
 * LCD I2C 16x2:
 * - Resolution: 16 characters × 2 lines
 * - Character Set: ASCII + custom characters
 * - Backlight: Blue LED dengan current control
 * - Viewing Angle: 140° horizontal, 120° vertical
 * - Operating Temperature: -20°C to +70°C
 * - Life Expectancy: >50,000 hours
 *
 * TM1637 7-Segment:
 * - Digits: 4 digits, 0.56" height
 * - Display Range: 0000-9999
 * - Brightness: 8 levels (0-7)
 * - Color: Red LED segments
 * - Viewing Distance: >10 meters
 * - Life Expectancy: >100,000 hours
 *
 * Performance Specifications:
 * - Response Time: <100ms per stage detection
 * - Counter Range: 0-9999 (auto reset)
 * - Test Accuracy: >99.9% for good switches
 * - LCD Update Rate: 500ms interval (anti-flicker)
 * - TM1637 Update: Immediate (<10ms)
 * - Serial Baud Rate: 9600 bps
 *
 * Environmental Specifications:
 * - Operating Temperature: 0°C to +50°C
 * - Storage Temperature: -20°C to +70°C
 * - Humidity: 10% to 90% RH non-condensing
 * - Altitude: Sea level to 2000m
 * - Vibration: 10-55Hz, 1.5mm amplitude
 * - EMC: Industrial environment compatible
 *
 * Production Specifications:
 * - Testing Capacity: Unlimited (counter resets at 10000)
 * - Throughput: Limited by operator speed (~60/hour)
 * - Duty Cycle: Continuous operation (24/7 capable)
 * - MTBF: >10,000 hours (estimated)
 * - Accuracy: >99.9% detection rate
 * - False Positive: <0.1% rate
 *
 */
